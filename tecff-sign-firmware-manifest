#!/bin/bash
if [ "$1" != "stable" ] && [ "$1" != "beta" ]; then
	echo "please supply branch (beta|stable) as a parameter"
	exit 1
fi
BUILD_SRV="root@host02.tecff.de"
LPATH="$(mktemp)"
PATH1="/var/lib/jenkins/jobs"
PATH2="lastSuccessful/archive/output/images/sysupgrade"
JOB_BETA="site-ffa-beta"
JOB_STAB="site-ffa-stable"
SIGNSH_SRC="https://raw.githubusercontent.com/freifunk-gluon/gluon/master/contrib/sign.sh"
SIGNSH="/usr/local/bin/gluon-sign.sh"
if [ ! -x "$SIGNSH" ]; then
	echo "please make sure $SIGNSH exists and is executable."
	echo "you can download it like this:"
	echo "sudo wget $SIGNSH_SRC -O $SIGNSH"
	exit 1
fi
echo "make sure you have installed ecdsautil/ecdsasign as it is needed by $SIGNSH !"
if [ "$1" = "beta" ]; then
	RPATH="$PATH1/$JOB_BETA/$PATH2/beta.manifest"
else
	RPATH="$PATH1/$JOB_STAB/$PATH2/stable.manifest"
fi
# read signature secret from user input
read -sp "insert your signature secret: " SECRET
# load manifest from buildserver
scp $BUILD_SRV:$RPATH $LPATH
# create temporary file for signature secret
SECFILE="$(mktemp)"
# save signature secret to file for usage in signature script
echo $SECRET > $SECFILE
$SIGNSH $SECFILE $LPATH
# copy manifest back to the buildserver
scp $LPATH $BUILD_SRV:$RPATH
rm $LPATH
rm $SECFILE
echo "if there was no error message until this point, the file was signed successfully and copied back to the buildserver."
